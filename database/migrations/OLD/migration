<?php
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration {
    public function up()
    {
        // Tabela de utilizadores
        Schema::create('users', function (Blueprint $table) {
            $table->id();
            $table->string('username');
            $table->string('email')->unique();
            $table->timestamp('email_verified_at')->nullable();
            $table->binary('password');
            $table->rememberToken();
            $table->timestamps();
        });

        // Tabela de papéis
        Schema::create('roles', function (Blueprint $table) {
            $table->id();
            $table->string('role');
            $table->timestamps();
        });

        // Relação entre utilizadores e papéis
        Schema::create('users_roles', function (Blueprint $table) {
            $table->foreignId('id_user')->constrained('users')->onDelete('cascade');
            $table->foreignId('id_role')->constrained('roles')->onDelete('cascade');
            $table->primary(['id_user', 'id_role']);
        });

        // Tabela de estudantes
        Schema::create('students', function (Blueprint $table) {
            $table->id();
            $table->name('name');
            $table->integer('studentnumber')->unique();
            $table->date('birthdate');
            $table->timestamps();
        });

        // Tabela de professores
        Schema::create('teachers', function (Blueprint $table) {
            $table->id();
            $table->integer('teachernumber')->unique();
            $table->string('name');
            $table->string('acronym');
            $table->date('birthdate');
            $table->date('startingdate');
            $table->foreignId('id_user')->constrained('users')->onDelete('cascade');
            $table->foreignId('id_gender')->constrained('genders')->onDelete('cascade');
            $table->foreignId('id_qualifications')->constrained('qualifications')->onDelete('cascade');
            $table->foreignId('id_department')->constrained('departments')->onDelete('cascade');
            $table->foreignId('id_professionalrelationship')->constrained('professional_relationships')->onDelete('cascade');
            $table->foreignId('id_contractualrelationship')->constrained('contratual_relationships')->onDelete('cascade');
            $table->foreignId('id_salaryscale')->constrained('salaryscales')->onDelete('cascade');
            $table->timestamps();
        });

        // Outras tabelas de suporte
        Schema::create('genders', function (Blueprint $table) {
            $table->id();
            $table->string('gender');
            $table->timestamps();
        });

        Schema::create('qualifications', function (Blueprint $table) {
            $table->id();
            $table->string('qualification');
            $table->timestamps();
        });

        Schema::create('departments', function (Blueprint $table) {
            $table->id();
            $table->string('department');
            $table->timestamps();
        });
    }

    public function down()
    {
        Schema::dropIfExists('users_roles');
        Schema::dropIfExists('roles');
        Schema::dropIfExists('users');
        Schema::dropIfExists('teachers');
        Schema::dropIfExists('students');
        Schema::dropIfExists('genders');
        Schema::dropIfExists('qualifications');
        Schema::dropIfExists('departments');
    }
};
